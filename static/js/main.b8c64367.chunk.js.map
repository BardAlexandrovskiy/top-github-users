{"version":3,"sources":["header.js","inputSearch.js","errorContainer.js","itemList.js","main.js","serviceWorker.js","index.js"],"names":["Header","handleClickLogo","className","onClick","height","viewBox","version","width","aria-hidden","fillRule","fill","d","InputSearch","value","handleChangeInput","handlePressInput","handleClickButton","onChange","onKeyDown","placeholder","type","ErrorContainer","style","handleClickErrorButton","ItemList","props","state","name","bio","location","email","preloader","this","user","getError","setState","fetch","url","then","res","status","json","Error","userAdditional","catch","finally","display","src","avatar_url","alt","href","html_url","login","React","Component","defaultProps","Main","e","inputSearchValue","target","errorContainer","getUsersTop","trim","usersInfoObj","items","length","usersArr","langth","users","slice","keyCode","window","reload","map","key","id","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8c64367.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Header({ handleClickLogo }) {\n  return (\n    <header className=\"header\">\n      <svg\n        onClick={handleClickLogo}\n        className=\"logo\"\n        height=\"32\"\n        viewBox=\"0 0 16 16\"\n        version=\"1.1\"\n        width=\"32\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          fill=\"white\"\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n        />\n      </svg>\n      <h1 className=\"title_header\">Топ пользователей github</h1>\n      <p className=\"description_header\">TOP 10 по вашему городу</p>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  handleClickLogo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function InputSearch({\n  value,\n  handleChangeInput,\n  handlePressInput,\n  handleClickButton,\n}) {\n  return (\n    <div className=\"container_input\">\n      <input\n        value={value}\n        onChange={handleChangeInput}\n        onKeyDown={handlePressInput}\n        placeholder=\"Введите город(на английском)\"\n        className=\"input_search\"\n      />\n      <button type=\"button\" onClick={handleClickButton} className=\"button_search\">\n        Поиск\n      </button>\n    </div>\n  );\n}\n\nInputSearch.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChangeInput: PropTypes.func.isRequired,\n  handlePressInput: PropTypes.func.isRequired,\n  handleClickButton: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorContainer({ style, handleClickErrorButton }) {\n  return (\n    <div className=\"lock_container\" style={style}>\n      <div className=\"error_container\">\n        <p className=\"error_text\">Ошибка</p>\n        <button type=\"button\" className=\"error_button\" onClick={handleClickErrorButton}>\n          Ок\n        </button>\n      </div>\n    </div>\n  );\n}\n\nErrorContainer.propTypes = {\n  style: PropTypes.objectOf(PropTypes.string).isRequired,\n  handleClickErrorButton: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      bio: '',\n      location: '',\n      email: '',\n      preloader: 'none',\n    };\n  }\n\n  componentDidMount() {\n    const { user, getError } = this.props;\n    this.setState({ preloader: 'block' });\n    return fetch(user.url)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        throw new Error(res.status);\n      })\n      .then((userAdditional) => {\n        this.setState({\n          name: userAdditional.name,\n          bio: userAdditional.bio,\n          location: userAdditional.location,\n          email: userAdditional.email,\n        });\n      })\n      .catch(getError)\n      .finally(() => this.setState({ preloader: 'none' }));\n  }\n\n  render() {\n    const { user } = this.props;\n    const {\n      name, bio, location, email, preloader,\n    } = this.state;\n    return (\n      <li className=\"list_item\">\n        <div className=\"lds-ellipsis\" style={{ display: preloader }}>\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n        <div className=\"user_avatar_container\">\n          <img src={user.avatar_url} alt=\"avatar\" className=\"user_avatar\" />\n        </div>\n        <div className=\"list_item_content\">\n          <a className=\"user_login\" href={user.html_url}>\n            {user.login}\n          </a>\n          <p className=\"user_name\">{name}</p>\n          <p className=\"user_bio\">{bio}</p>\n          <div className=\"user_location\">\n            <svg\n              display={location ? 'inline-block' : 'none'}\n              className=\"user_email_img\"\n              viewBox=\"0 0 12 16\"\n              version=\"1.1\"\n              width=\"12\"\n              height=\"16\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                fill=\"#ccc\"\n                d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31 0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48 3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"\n              />\n            </svg>\n            <p className=\"user_location_text\">{location}</p>\n          </div>\n          <div className=\"user_email\">\n            <svg\n              display={email ? 'inline-block' : 'none'}\n              className=\"user_email_img\"\n              viewBox=\"0 0 14 16\"\n              version=\"1.1\"\n              width=\"14\"\n              height=\"16\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                fill=\"#ccc\"\n                d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4 3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"\n              />\n            </svg>\n            <p className=\"user_email_text\">{email}</p>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nItemList.propTypes = {\n  user: PropTypes.shape({\n    url: PropTypes.string,\n    avatar_url: PropTypes.string,\n    login: PropTypes.string,\n    html_url: PropTypes.string,\n  }),\n  getError: PropTypes.func.isRequired,\n};\n\nItemList.defaultProps = {\n  user: {\n    url: '',\n    avatar_url: '',\n    login: '',\n    html_url: '',\n  },\n};\n","import React from 'react';\nimport Header from './header';\nimport InputSearch from './inputSearch';\nimport ErrorContainer from './errorContainer';\nimport ItemList from './itemList';\n\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputSearchValue: '',\n      preloader: 'none',\n      errorContainer: 'none',\n      users: [],\n    };\n  }\n\n  handleChangeInput = e => this.setState({ inputSearchValue: e.target.value });\n\n  getError = () => this.setState({ errorContainer: 'block' });\n\n\n  getUsersTop = () => {\n    const { inputSearchValue } = this.state;\n    if (inputSearchValue.trim()) {\n      this.setState({ preloader: 'inline-block' });\n      fetch(`https://api.github.com/search/users?q=${inputSearchValue}`)\n        .then((res) => {\n          if (res.status === 200) {\n            this.setState({\n              inputSearchValue: '',\n            });\n            return res.json();\n          }\n          throw new Error(res.status);\n        })\n        .then((usersInfoObj) => {\n          if (usersInfoObj.items.length) {\n            return usersInfoObj.items;\n          }\n          throw new Error('Нет пользователей');\n        })\n        .then((usersArr) => {\n          if (usersArr.langth < 10) {\n            this.setState({ users: usersArr });\n          } else {\n            this.setState({ users: usersArr.slice(0, 10) });\n          }\n        })\n        .catch(this.getError)\n        .finally(() => {\n          this.setState({\n            inputSearchValue: '',\n            preloader: 'none',\n          });\n        });\n    }\n  };\n\n  handlePressInput = (e) => {\n    if (e.keyCode === 13) {\n      this.getUsersTop();\n    }\n  };\n\n  handleClickLogo = () => {\n    // this.setState({ users: [] });\n    window.location.reload();\n  };\n\n  handleClickErrorButton = () => {\n    this.setState({ errorContainer: 'none' });\n  };\n\n  render() {\n    const {\n      inputSearchValue, preloader, errorContainer, users,\n    } = this.state;\n    return (\n      <div className=\"main_app\">\n        <ErrorContainer\n          style={{\n            display: errorContainer,\n          }}\n          handleClickErrorButton={this.handleClickErrorButton}\n        />\n        <Header handleClickLogo={this.handleClickLogo} />\n        <main className=\"main_container\">\n          <div className=\"lds-ellipsis\" style={{ display: preloader }}>\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n          <InputSearch\n            value={inputSearchValue}\n            handleChangeInput={this.handleChangeInput}\n            handlePressInput={this.handlePressInput}\n            handleClickButton={this.getUsersTop}\n          />\n          <ul className=\"top_users_container\">\n            {users.map(user => <ItemList getError={this.getError} key={user.id} user={user} />)}\n          </ul>\n        </main>\n      </div>\n    );\n  }\n}\n","/* eslint-disable operator-linebreak */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-param-reassign */\n/* eslint-disable arrow-parens */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}