{"version":3,"sources":["header.js","inputSearch.js","errorContainer.js","itemList.js","main.js","serviceWorker.js","index.js"],"names":["Header","handleClickLogo","className","onClick","height","viewBox","version","width","aria-hidden","fillRule","fill","d","InputSearch","value","handleChangeInput","handlePressInput","handleClickButton","onChange","onKeyDown","placeholder","type","ErrorContainer","style","handleClickErrorButton","ItemList","props","state","name","bio","location","email","preloader","this","user","getError","setState","fetch","url","then","res","status","json","Error","userAdditional","catch","finally","display","src","avatar_url","alt","href","html_url","target","rel","login","React","Component","defaultProps","Main","e","inputSearchValue","errorContainer","getUsersTop","trim","replace","usersInfoObj","items","length","usersArr","langth","users","slice","keyCode","window","reload","map","key","id","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e808dc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Header({ handleClickLogo }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <svg\r\n        onClick={handleClickLogo}\r\n        className=\"logo\"\r\n        height=\"32\"\r\n        viewBox=\"0 0 16 16\"\r\n        version=\"1.1\"\r\n        width=\"32\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          fill=\"white\"\r\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\r\n        />\r\n      </svg>\r\n      <h1 className=\"title_header\">Топ пользователей github</h1>\r\n      <p className=\"description_header\">TOP 10 по вашему городу</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  handleClickLogo: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function InputSearch({\r\n  value,\r\n  handleChangeInput,\r\n  handlePressInput,\r\n  handleClickButton,\r\n}) {\r\n  return (\r\n    <div className=\"container_input\">\r\n      <input\r\n        value={value}\r\n        onChange={handleChangeInput}\r\n        onKeyDown={handlePressInput}\r\n        placeholder=\"Введите город(на английском)\"\r\n        className=\"input_search\"\r\n      />\r\n      <button type=\"button\" onClick={handleClickButton} className=\"button_search\">\r\n        Поиск\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nInputSearch.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  handleChangeInput: PropTypes.func.isRequired,\r\n  handlePressInput: PropTypes.func.isRequired,\r\n  handleClickButton: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ErrorContainer({ style, handleClickErrorButton }) {\r\n  return (\r\n    <div className=\"lock_container\" style={style}>\r\n      <div className=\"error_container\">\r\n        <p className=\"error_text\">Ошибка</p>\r\n        <button type=\"button\" className=\"error_button\" onClick={handleClickErrorButton}>\r\n          Ок\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorContainer.propTypes = {\r\n  style: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  handleClickErrorButton: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ItemList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      bio: '',\r\n      location: '',\r\n      email: '',\r\n      preloader: 'none',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { user, getError } = this.props;\r\n    this.setState({ preloader: 'block' });\r\n    return fetch(user.url)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n        throw new Error(res.status);\r\n      })\r\n      .then((userAdditional) => {\r\n        this.setState({\r\n          name: userAdditional.name,\r\n          bio: userAdditional.bio,\r\n          location: userAdditional.location,\r\n          email: userAdditional.email,\r\n        });\r\n      })\r\n      .catch(getError)\r\n      .finally(() => this.setState({ preloader: 'none' }));\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const {\r\n      name, bio, location, email, preloader,\r\n    } = this.state;\r\n    return (\r\n      <li className=\"list_item\">\r\n        <div className=\"lds-ellipsis\" style={{ display: preloader }}>\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </div>\r\n        <div className=\"user_avatar_container\">\r\n          <img src={user.avatar_url} alt=\"avatar\" className=\"user_avatar\" />\r\n        </div>\r\n        <div className=\"list_item_content\">\r\n          <a className=\"user_login\" href={user.html_url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n            {user.login}\r\n          </a>\r\n          <p className=\"user_name\">{name}</p>\r\n          <p className=\"user_bio\">{bio}</p>\r\n          <div className=\"user_location\">\r\n            <svg\r\n              display={location ? 'inline-block' : 'none'}\r\n              className=\"user_email_img\"\r\n              viewBox=\"0 0 12 16\"\r\n              version=\"1.1\"\r\n              width=\"12\"\r\n              height=\"16\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                fill=\"#ccc\"\r\n                d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31 0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48 3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"\r\n              />\r\n            </svg>\r\n            <p className=\"user_location_text\">{location}</p>\r\n          </div>\r\n          <div className=\"user_email\">\r\n            <svg\r\n              display={email ? 'inline-block' : 'none'}\r\n              className=\"user_email_img\"\r\n              viewBox=\"0 0 14 16\"\r\n              version=\"1.1\"\r\n              width=\"14\"\r\n              height=\"16\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                fill=\"#ccc\"\r\n                d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4 3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"\r\n              />\r\n            </svg>\r\n            <p className=\"user_email_text\">{email}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nItemList.propTypes = {\r\n  user: PropTypes.shape({\r\n    url: PropTypes.string,\r\n    avatar_url: PropTypes.string,\r\n    login: PropTypes.string,\r\n    html_url: PropTypes.string,\r\n  }),\r\n  getError: PropTypes.func.isRequired,\r\n};\r\n\r\nItemList.defaultProps = {\r\n  user: {\r\n    url: '',\r\n    avatar_url: '',\r\n    login: '',\r\n    html_url: '',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport InputSearch from './inputSearch';\r\nimport ErrorContainer from './errorContainer';\r\nimport ItemList from './itemList';\r\n\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputSearchValue: '',\r\n      preloader: 'none',\r\n      errorContainer: 'none',\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  handleChangeInput = e => this.setState({ inputSearchValue: e.target.value });\r\n\r\n  getError = () => this.setState({ errorContainer: 'block' });\r\n\r\n\r\n  getUsersTop = () => {\r\n    const { inputSearchValue } = this.state;\r\n    if (inputSearchValue.trim()) {\r\n      this.setState({ preloader: 'inline-block' });\r\n      const location = inputSearchValue.replace(' ', '-');\r\n      fetch(`https://api.github.com/search/users?q=location:${location}+repos:%3E9+followers:%3E10`)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              inputSearchValue: '',\r\n            });\r\n            return res.json();\r\n          }\r\n          throw new Error(res.status);\r\n        })\r\n        .then((usersInfoObj) => {\r\n          if (usersInfoObj.items.length) {\r\n            return usersInfoObj.items;\r\n          }\r\n          throw new Error('Нет пользователей');\r\n        })\r\n        .then((usersArr) => {\r\n          if (usersArr.langth < 10) {\r\n            this.setState({ users: usersArr });\r\n          } else {\r\n            this.setState({ users: usersArr.slice(0, 10) });\r\n          }\r\n        })\r\n        .catch(this.getError)\r\n        .finally(() => {\r\n          this.setState({\r\n            inputSearchValue: '',\r\n            preloader: 'none',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handlePressInput = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.getUsersTop();\r\n    }\r\n  };\r\n\r\n  handleClickLogo = () => {\r\n    // this.setState({ users: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  handleClickErrorButton = () => {\r\n    this.setState({ errorContainer: 'none' });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inputSearchValue, preloader, errorContainer, users,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"main_app\">\r\n        <ErrorContainer\r\n          style={{\r\n            display: errorContainer,\r\n          }}\r\n          handleClickErrorButton={this.handleClickErrorButton}\r\n        />\r\n        <Header handleClickLogo={this.handleClickLogo} />\r\n        <main className=\"main_container\">\r\n          <div className=\"lds-ellipsis\" style={{ display: preloader }}>\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n          </div>\r\n          <InputSearch\r\n            value={inputSearchValue}\r\n            handleChangeInput={this.handleChangeInput}\r\n            handlePressInput={this.handlePressInput}\r\n            handleClickButton={this.getUsersTop}\r\n          />\r\n          <ul className=\"top_users_container\">\r\n            {users.map(user => <ItemList getError={this.getError} key={user.id} user={user} />)}\r\n          </ul>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable operator-linebreak */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-use-before-define */\r\n\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n  // [::1] is the IPv6 localhost address.\r\n  || window.location.hostname === '[::1]'\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  || window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from './main';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}